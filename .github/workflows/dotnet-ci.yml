name: RecipeShare CI/CD

on:
  push:
    branches: [ main, develop ] # Trigger on pushes to main or develop branches
  pull_request:
    branches: [ main, develop ] # Trigger on pull requests to main or develop branches

jobs:
  build-test-and-docker:
    runs-on: ubuntu-latest # Use a fresh Ubuntu virtual machine provided by GitHub

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4 # Action to check out your repository code

    - name: Setup .NET 8.0 SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x' # Targeting .NET 8.0
        cache: true 

    - name: Restore Dependencies
      run: dotnet restore RecipeShare.sln

    - name: Build Solution
      run: dotnet build RecipeShare.sln --configuration Release --no-restore

    - name: Run Unit Tests
      # This will find and run tests in your RecipeShare.Tests project
      run: dotnet test RecipeShare.Tests/RecipeShare.Tests.csproj --configuration Release --no-build

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker Image
      env:
        # IMPORTANT: REPLACE 'your-dockerhub-username' with your actual Docker Hub username
        IMAGE_NAME: your-dockerhub-username/recipeshare-app 

      run: |
        # The Dockerfile is at the root of the repository, and the build context is also the root.
        # This command will build the image based on your Dockerfile at the repo root.
        docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} -t ${{ env.IMAGE_NAME }}:latest -f Dockerfile .

    - name: Push Docker Image
      env:
        # IMPORTANT: REPLACE 'your-dockerhub-username' with your actual Docker Hub username
        IMAGE_NAME: your-dockerhub-username/recipeshare-app 

      run: |
        docker push ${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.IMAGE_NAME }}:latest